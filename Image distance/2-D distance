import numpy as np
from PIL import Image
from scipy import ndimage
import matplotlib.pyplot as plt
image_paths = {
    "leaf": '/content/leaf.png',
    "leaf_noisy": '/content/leafnoisy.png',
    "chroL": '/content/chroL.bmp',
    "chroOp": '/content/chroOp.bmp',
    "original": '/content/original.bmp',
    "original2": '/content/original2.bmp'
}


for name, path in image_paths.items():
    image = Image.open(path).convert('L')
    image_array = np.array(image)
    binary_image = image_array > 0

    euclidean_dist = ndimage.distance_transform_edt(binary_image)
    cityblock_dist = ndimage.distance_transform_cdt(binary_image, metric='taxicab')
    chessboard_dist = ndimage.distance_transform_cdt(binary_image, metric='chessboard')
    plt.figure(figsize=(12, 8))
    plt.suptitle(f'Distance Transforms for {name}', fontsize=16)
    plt.subplot(2, 2, 1)
    plt.imshow(binary_image, cmap='gray')
    plt.title('Binary Image')
    plt.axis('off')

    plt.subplot(2, 2, 2)
    plt.imshow(euclidean_dist, cmap='viridis')
    plt.title('Euclidean Distance Transform')
    plt.axis('off')

    plt.subplot(2, 2, 3)
    plt.imshow(cityblock_dist, cmap='viridis')
    plt.title('Cityblock Distance Transform')
    plt.axis('off')

    plt.subplot(2, 2, 4)
    plt.imshow(chessboard_dist, cmap='viridis')
    plt.title('Chessboard Distance Transform')
    plt.axis('off')

    plt.tight_layout(rect=[0, 0, 1, 0.96])
    plt.show()
