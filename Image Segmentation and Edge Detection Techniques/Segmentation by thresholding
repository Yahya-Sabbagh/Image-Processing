import cv2
import numpy as np
import matplotlib.pyplot as plt

def threshold_with_histogram(image_path):

    image = cv2.imread(image_path, cv2.IMREAD_GRAYSCALE)
    if image is None:
        print(f"Error: Unable to load image from {image_path}")
        return None

    hist = cv2.calcHist([image], [0], None, [256], [0, 256])

    _, binary_image = cv2.threshold(image, 0, 255, cv2.THRESH_BINARY + cv2.THRESH_OTSU)


    plt.figure(figsize=(12, 6))
    plt.subplot(1, 3, 1)
    plt.title("Original Image")
    plt.imshow(image, cmap='gray')
    plt.axis('off')

    plt.subplot(1, 3, 2)
    plt.title("Histogram with Threshold")
    plt.plot(hist, color='black')
    plt.axvline(_, color='red', linestyle='--', label=f"Threshold: {int(_)}")
    plt.legend()

    plt.subplot(1, 3, 3)
    plt.title("Binary Image")
    plt.imshow(binary_image, cmap='gray')
    plt.axis('off')

    plt.tight_layout()
    plt.show()

    return binary_image

binary_result = threshold_with_histogram("/content/letter.bmp")

import cv2
import numpy as np
import matplotlib.pyplot as plt
from skimage import measure

def region_growing(image, seed_point, threshold):
    rows, cols = image.shape
    segmented = np.zeros_like(image)
    visited = np.zeros_like(image, dtype=bool)
    stack = [seed_point]

    while stack:
        x, y = stack.pop()
        if visited[x, y]:
            continue
        visited[x, y] = True
        segmented[x, y] = 255

        for dx, dy in [(-1, 0), (1, 0), (0, -1), (0, 1), (-1, -1), (1, 1), (-1, 1), (1, -1)]:
            nx, ny = x + dx, y + dy
            if 0 <= nx < rows and 0 <= ny < cols:
                if not visited[nx, ny] and abs(int(image[nx, ny]) - int(image[x, y])) < threshold:
                    stack.append((nx, ny))

    return segmented

image_path = "/content/se000.jpg"
image = cv2.imread(image_path, cv2.IMREAD_GRAYSCALE)

image = cv2.GaussianBlur(image, (5, 5), 0)

seed_point = (150, 250)
threshold = 20

segmented_liver = region_growing(image, seed_point, threshold)

plt.figure(figsize=(12, 6))
plt.subplot(1, 3, 1)
plt.title("Original Image")
plt.imshow(image, cmap='gray')
plt.axis('off')

plt.subplot(1, 3, 2)
plt.title("Segmented Liver")
plt.imshow(segmented_liver, cmap='gray')
plt.axis('off')

plt.subplot(1, 3, 3)
plt.title("Overlay")
plt.imshow(image, cmap='gray')
plt.imshow(segmented_liver, cmap='jet', alpha=0.5)
plt.axis('off')

plt.tight_layout()
plt.show()
